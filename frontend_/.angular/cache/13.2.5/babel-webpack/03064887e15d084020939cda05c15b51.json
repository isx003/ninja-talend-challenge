{"ast":null,"code":"import _asyncToGenerator from \"E:\\\\workstation\\\\challenges\\\\ninja-talend-challenge\\\\frontend\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserService {\n  constructor(http) {\n    this.http = http;\n  }\n\n  getUsers() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      return yield _this.http.get('https://rickandmortyapi.com/api');\n    })();\n  }\n\n}\n\nUserService.ɵfac = function UserService_Factory(t) {\n  return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n};\n\nUserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserService,\n  factory: UserService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["E:/workstation/challenges/ninja-talend-challenge/frontend/src/app/services/user.service.ts"],"names":["i0","i1","UserService","constructor","http","getUsers","get","ɵfac","UserService_Factory","t","ɵɵinject","HttpClient","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":";AAAA,OAAO,KAAKA,EAAZ,MAAoB,eAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,sBAApB;AACA,OAAO,MAAMC,WAAN,CAAkB;AACrBC,EAAAA,WAAW,CAACC,IAAD,EAAO;AACd,SAAKA,IAAL,GAAYA,IAAZ;AACH;;AACKC,EAAAA,QAAQ,GAAG;AAAA;;AAAA;AACb,mBAAa,KAAI,CAACD,IAAL,CAAUE,GAAV,CAAc,iCAAd,CAAb;AADa;AAEhB;;AANoB;;AAQzBJ,WAAW,CAACK,IAAZ,GAAmB,SAASC,mBAAT,CAA6BC,CAA7B,EAAgC;AAAE,SAAO,KAAKA,CAAC,IAAIP,WAAV,EAAuBF,EAAE,CAACU,QAAH,CAAYT,EAAE,CAACU,UAAf,CAAvB,CAAP;AAA4D,CAAjH;;AACAT,WAAW,CAACU,KAAZ,GAAoB,aAAcZ,EAAE,CAACa,kBAAH,CAAsB;AAAEC,EAAAA,KAAK,EAAEZ,WAAT;AAAsBa,EAAAA,OAAO,EAAEb,WAAW,CAACK,IAA3C;AAAiDS,EAAAA,UAAU,EAAE;AAA7D,CAAtB,CAAlC","sourcesContent":["import * as i0 from \"@angular/core\";\r\nimport * as i1 from \"@angular/common/http\";\r\nexport class UserService {\r\n    constructor(http) {\r\n        this.http = http;\r\n    }\r\n    async getUsers() {\r\n        return await this.http.get('https://rickandmortyapi.com/api');\r\n    }\r\n}\r\nUserService.ɵfac = function UserService_Factory(t) { return new (t || UserService)(i0.ɵɵinject(i1.HttpClient)); };\r\nUserService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: UserService, factory: UserService.ɵfac, providedIn: 'root' });\r\n"]},"metadata":{},"sourceType":"module"}